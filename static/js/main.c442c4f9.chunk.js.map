{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","currentStartImg","moveSliderRigth","props","images","step","frameSize","infinite","lastSlidePosition","length","setState","prevState","prevCurrentStartImg","moveSliderLeft","imagesLength","lastSlideWidth","this","itemWidth","animationDuration","className","style","width","overflow","transform","transition","map","image","index","src","alt","height","type","onClick","React","Component","App","htmlFor","id","min","max","value","onChange","e","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c442c4f9.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  position: number,\n  currentStartImg: number,\n};\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n    currentStartImg: 0,\n  };\n\n  static getDerivedStateFromProps(props:Props, state:State) {\n    return {\n      position: state.currentStartImg * props.itemWidth,\n    };\n  }\n\n  moveSliderRigth = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const imagesLength = images.length;\n    const lastSlidePosition = imagesLength - frameSize;\n\n    this.setState((prevState) => {\n      const prevCurrentStartImg = prevState.currentStartImg;\n      const slideWidth = step;\n\n      if (prevCurrentStartImg === lastSlidePosition && infinite) {\n        return ({\n          currentStartImg: 0,\n        });\n      }\n\n      if (prevCurrentStartImg + slideWidth > lastSlidePosition) {\n        return ({\n          currentStartImg: lastSlidePosition,\n        });\n      }\n\n      return ({\n        currentStartImg: prevCurrentStartImg + step,\n      });\n    });\n  };\n\n  moveSliderLeft = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const imagesLength = images.length;\n    const lastSlidePosition = imagesLength - frameSize;\n    const lastSlideWidth = imagesLength % frameSize;\n\n    this.setState((prevState) => {\n      const prevCurrentStartImg = prevState.currentStartImg;\n      const slideWidth = step;\n\n      if (prevCurrentStartImg === 0 && infinite) {\n        return ({\n          currentStartImg: lastSlidePosition,\n        });\n      }\n\n      if (prevCurrentStartImg === lastSlideWidth\n        || prevCurrentStartImg < slideWidth) {\n        return ({\n          currentStartImg: 0,\n        });\n      }\n\n      return ({\n        currentStartImg: prevCurrentStartImg - step,\n      });\n    });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          overflow: 'hidden',\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translate(-${this.state.position}px)`,\n            transition: `transform ${animationDuration}ms ease`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`${index}`}\n                width={itemWidth}\n                height={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"buttons\">\n          <button\n            className=\"buttons__button buttons__button--right\"\n            type=\"button\"\n            onClick={() => {\n              this.moveSliderLeft();\n            }}\n          >\n            {' '}\n          </button>\n          <button\n            className=\"buttons__button buttons__button--left\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={() => {\n              this.moveSliderRigth();\n            }}\n          >\n            {' '}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <div className=\"slider\">\n          <div className=\"slider__list\">\n            <Carousel\n              images={images}\n              step={this.state.step}\n              frameSize={this.state.frameSize}\n              itemWidth={this.state.itemWidth}\n              animationDuration={this.state.animationDuration}\n              infinite={this.state.infinite}\n            />\n          </div>\n\n          <label htmlFor=\"stepId\">\n            Step:\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              min=\"2\"\n              max=\"4\"\n              value={this.state.step}\n              onChange={(e) => this.setState({ step: +e.target.value })}\n            />\n          </label>\n          <label htmlFor=\"frameId\">\n            Frame Size:\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              min=\"2\"\n              max=\"6\"\n              value={this.state.frameSize}\n              onChange={(e) => this.setState({ frameSize: +e.target.value })}\n            />\n          </label>\n          <label htmlFor=\"itemId\">\n            Item Width:\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              min=\"100\"\n              max=\"500\"\n              value={this.state.itemWidth}\n              onChange={(e) => this.setState({ itemWidth: +e.target.value })}\n            />\n          </label>\n          <label htmlFor=\"durationId\">\n            Animation Duration:\n            <input\n              id=\"durationId\"\n              type=\"number\"\n              min=\"100\"\n              max=\"5000\"\n              value={this.state.animationDuration}\n              onChange={(e) => this\n                .setState({ animationDuration: +e.target.value })}\n            />\n          </label>\n          <label htmlFor=\"infinite\">\n            Infinite:\n            <input\n              type=\"checkbox\"\n              onChange={(e:React.ChangeEvent<HTMLInputElement>) => this\n                .setState({ infinite: e.target.checked })}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}