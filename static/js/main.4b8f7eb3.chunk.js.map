{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["ControlButton","Carousel","state","position","currentStartImg","moveSlider","buttonName","props","images","step","frameSize","itemWidth","infinite","lastSlidePosition","length","lastSlideWidth","setState","prevState","prevPosition","slideWidth","Next","Prev","this","animationDuration","className","style","width","overflow","transform","transition","map","image","index","src","alt","height","type","onClick","React","Component","App","htmlFor","id","min","max","value","onChange","e","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b8f7eb3.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  position: number,\n  currentStartImg: number,\n};\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nenum ControlButton {\n  Prev,\n  Next,\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n    currentStartImg: 0,\n  };\n\n  static getDerivedStateFromProps(props:Props, state:State) {\n    return {\n      position: state.currentStartImg * props.itemWidth,\n    };\n  }\n\n  moveSlider = (buttonName: ControlButton) => {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const imagesLength = itemWidth * images.length;\n    const lastSlidePosition = imagesLength - (frameSize * itemWidth);\n    const lastSlideWidth = (images.length % frameSize) * itemWidth;\n\n    this.setState((prevState) => {\n      const prevPosition = prevState.position;\n      const slideWidth = step * itemWidth;\n\n      if (buttonName === ControlButton.Next) {\n        if (prevPosition === lastSlidePosition && infinite) {\n          return ({\n            position: 0,\n            currentStartImg: 0,\n          });\n        }\n\n        if (prevPosition + slideWidth > lastSlidePosition) {\n          return ({\n            position: lastSlidePosition,\n            currentStartImg: images.length - step,\n          });\n        }\n\n        return ({\n          position: prevPosition + slideWidth,\n          currentStartImg: prevState.currentStartImg + step,\n        });\n      }\n\n      if (buttonName === ControlButton.Prev) {\n        if (prevPosition === 0 && infinite) {\n          return ({\n            position: lastSlidePosition,\n            currentStartImg: images.length - step,\n          });\n        }\n\n        if (prevPosition === lastSlideWidth || prevPosition < slideWidth) {\n          return ({\n            position: 0,\n            currentStartImg: 0,\n          });\n        }\n\n        return ({\n          position: prevPosition - slideWidth,\n          currentStartImg: prevState.currentStartImg - step,\n        });\n      }\n\n      return ({\n        position: 0,\n        currentStartImg: prevState.currentStartImg + step,\n      });\n    });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          overflow: 'hidden',\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translate(-${this.state.position}px)`,\n            transition: `transform ${animationDuration}ms ease`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={`${index}`}\n                width={itemWidth}\n                height={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"buttons\">\n          <button\n            className=\"buttons__button buttons__button--right\"\n            type=\"button\"\n            onClick={() => {\n              this.moveSlider(ControlButton.Prev);\n            }}\n          >\n            {' '}\n          </button>\n          <button\n            className=\"buttons__button buttons__button--left\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={() => {\n              this.moveSlider(ControlButton.Next);\n            }}\n          >\n            {' '}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n        <div className=\"slider\">\n          <div className=\"slider__list\">\n            <Carousel\n              images={images}\n              step={this.state.step}\n              frameSize={this.state.frameSize}\n              itemWidth={this.state.itemWidth}\n              animationDuration={this.state.animationDuration}\n              infinite={this.state.infinite}\n            />\n          </div>\n\n          <label htmlFor=\"stepId\">\n            Step:\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              min=\"2\"\n              max=\"4\"\n              value={this.state.step}\n              onChange={(e) => this.setState({ step: +e.target.value })}\n            />\n          </label>\n          <label htmlFor=\"frameId\">\n            Frame Size:\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              min=\"2\"\n              max=\"6\"\n              value={this.state.frameSize}\n              onChange={(e) => this.setState({ frameSize: +e.target.value })}\n            />\n          </label>\n          <label htmlFor=\"itemId\">\n            Item Width:\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              min=\"100\"\n              max=\"500\"\n              value={this.state.itemWidth}\n              onChange={(e) => this.setState({ itemWidth: +e.target.value })}\n            />\n          </label>\n          <label htmlFor=\"durationId\">\n            Animation Duration:\n            <input\n              id=\"durationId\"\n              type=\"number\"\n              min=\"100\"\n              max=\"5000\"\n              value={this.state.animationDuration}\n              onChange={(e) => this\n                .setState({ animationDuration: +e.target.value })}\n            />\n          </label>\n          <label htmlFor=\"infinite\">\n            Infinite:\n            <input\n              type=\"checkbox\"\n              onChange={(e:React.ChangeEvent<HTMLInputElement>) => this\n                .setState({ infinite: e.target.checked })}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}